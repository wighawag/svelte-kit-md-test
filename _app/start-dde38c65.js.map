{"version":3,"file":"start-dde38c65.js","sources":["../../../generated/root.svelte","../../../../vite/preload-helper","../../../generated/manifest.js","../../../runtime/chunks/utils.js","../../../runtime/paths.js","../../../runtime/client/start.js"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit â€” do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","const scriptRel = 'modulepreload';const seen = {};const base = '/_app/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","const c = [\n\t() => import(\"../../pages/__layout.md\"),\n\t() => import(\"../runtime/components/error.svelte\"),\n\t() => import(\"../../pages/index.md\"),\n\t() => import(\"../../pages/section/index.md\"),\n\t() => import(\"../../pages/section/subsection/index.md\"),\n\t() => import(\"../../pages/section/subsection/testing.md\"),\n\t() => import(\"../../pages/section/testing.md\"),\n\t() => import(\"../../pages/section/1.md\"),\n\t() => import(\"../../pages/uses.md\")\n];\n\nconst d = decodeURIComponent;\n\nexport const routes = [\n\t// pages/index.md\n\t[/^\\/$/, [c[0], c[2]], [c[1]]],\n\n\t// pages/section/index.md\n\t[/^\\/section\\/?$/, [c[0], c[3]], [c[1]]],\n\n\t// pages/section/subsection/index.md\n\t[/^\\/section\\/subsection\\/?$/, [c[0], c[4]], [c[1]]],\n\n\t// pages/section/subsection/testing.md\n\t[/^\\/section\\/subsection\\/testing\\/?$/, [c[0], c[5]], [c[1]]],\n\n\t// pages/section/testing.md\n\t[/^\\/section\\/testing\\/?$/, [c[0], c[6]], [c[1]]],\n\n\t// pages/section/1.md\n\t[/^\\/section\\/1\\/?$/, [c[0], c[7]], [c[1]]],\n\n\t// pages/uses.md\n\t[/^\\/uses\\/?$/, [c[0], c[8]], [c[1]]]\n];\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nexport const fallback = [c[0](), c[1]()];","/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nexport { get_base_uri as g };\n","/** @type {string} */\nlet base = '';\n\n/** @type {string} */\nlet assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nfunction set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n\nexport { assets, base, set_paths };\n","import Root from '__GENERATED__/root.svelte';\nimport { fallback, routes } from '__GENERATED__/manifest.js';\nimport { onMount, tick } from 'svelte';\nimport { g as get_base_uri } from '../chunks/utils.js';\nimport { writable } from 'svelte/store';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/**\n * @param {Event} event\n * @returns {HTMLAnchorElement | SVGAElement | undefined}\n */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/**\n * @param {HTMLAnchorElement | SVGAElement} node\n * @returns {URL}\n */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\nclass Router {\n\t/**\n\t * @param {{\n\t *    base: string;\n\t *    routes: import('types/internal').CSRRoute[];\n\t *    trailing_slash: import('types/internal').TrailingSlash;\n\t *    renderer: import('./renderer').Renderer\n\t * }} opts\n\t */\n\tconstructor({ base, routes, trailing_slash, renderer }) {\n\t\tthis.base = base;\n\t\tthis.routes = routes;\n\t\tthis.trailing_slash = trailing_slash;\n\t\t/** Keeps tracks of multiple navigations caused by redirects during rendering */\n\t\tthis.navigating = 0;\n\n\t\t/** @type {import('./renderer').Renderer} */\n\t\tthis.renderer = renderer;\n\t\trenderer.router = this;\n\n\t\tthis.enabled = true;\n\n\t\t// make it possible to reset focus\n\t\tdocument.body.setAttribute('tabindex', '-1');\n\n\t\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\t\tthis.current_history_index = history.state?.['sveltekit:index'] ?? 0;\n\n\t\tif (this.current_history_index === 0) {\n\t\t\t// create initial history entry, so we can return here\n\t\t\thistory.replaceState({ ...history.state, 'sveltekit:index': 0 }, '', location.href);\n\t\t}\n\n\t\tthis.callbacks = {\n\t\t\t/** @type {Array<({ from, to, cancel }: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\t\tbefore_navigate: [],\n\n\t\t\t/** @type {Array<({ from, to }: { from: URL | null, to: URL }) => void>} */\n\t\t\tafter_navigate: []\n\t\t};\n\t}\n\n\tinit_listeners() {\n\t\tif ('scrollRestoration' in history) {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Adopted from Nuxt.js\n\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t// scrolling position.\n\t\taddEventListener('beforeunload', (e) => {\n\t\t\tlet should_block = false;\n\n\t\t\tconst intent = {\n\t\t\t\tfrom: this.renderer.current.url,\n\t\t\t\tto: null,\n\t\t\t\tcancel: () => (should_block = true)\n\t\t\t};\n\n\t\t\tthis.callbacks.before_navigate.forEach((fn) => fn(intent));\n\n\t\t\tif (should_block) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.returnValue = '';\n\t\t\t} else {\n\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t}\n\t\t});\n\n\t\t// Setting scrollRestoration to manual again when returning to this page.\n\t\taddEventListener('load', () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t});\n\n\t\t// There's no API to capture the scroll location right before the user\n\t\t// hits the back/forward button, so we listen for scroll events\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet scroll_timer;\n\t\taddEventListener('scroll', () => {\n\t\t\tclearTimeout(scroll_timer);\n\t\t\tscroll_timer = setTimeout(() => {\n\t\t\t\t// Store the scroll location in the history\n\t\t\t\t// This will persist even if we navigate away from the site and come back\n\t\t\t\tconst new_state = {\n\t\t\t\t\t...(history.state || {}),\n\t\t\t\t\t'sveltekit:scroll': scroll_state()\n\t\t\t\t};\n\t\t\t\thistory.replaceState(new_state, document.title, window.location.href);\n\t\t\t\t// iOS scroll event intervals happen between 30-150ms, sometimes around 200ms\n\t\t\t}, 200);\n\t\t});\n\n\t\t/** @param {Event} event */\n\t\tconst trigger_prefetch = (event) => {\n\t\t\tconst a = find_anchor(event);\n\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\tthis.prefetch(get_href(a));\n\t\t\t}\n\t\t};\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet mousemove_timeout;\n\n\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\tconst handle_mousemove = (event) => {\n\t\t\tclearTimeout(mousemove_timeout);\n\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t// add a layer of indirection to address that\n\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t);\n\t\t\t}, 20);\n\t\t};\n\n\t\taddEventListener('touchstart', trigger_prefetch);\n\t\taddEventListener('mousemove', handle_mousemove);\n\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t/** @param {MouseEvent} event */\n\t\taddEventListener('click', (event) => {\n\t\t\tif (!this.enabled) return;\n\n\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\tif (event.button || event.which !== 1) return;\n\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\tif (event.defaultPrevented) return;\n\n\t\t\tconst a = find_anchor(event);\n\t\t\tif (!a) return;\n\n\t\t\tif (!a.href) return;\n\n\t\t\tconst url = get_href(a);\n\t\t\tconst url_string = url.toString();\n\t\t\tif (url_string === location.href) {\n\t\t\t\tif (!location.hash) event.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if tag has\n\t\t\t// 1. 'download' attribute\n\t\t\t// 2. 'rel' attribute includes external\n\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\tif (a.hasAttribute('download') || (rel && rel.includes('external'))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if <a> has a target\n\t\t\tif (a instanceof SVGAElement ? a.target.baseVal : a.target) return;\n\n\t\t\t// Check if new url only differs by hash\n\t\t\tif (url.href.split('#')[0] === location.href.split('#')[0]) {\n\t\t\t\t// Call `pushState` to add url to history so going back works.\n\t\t\t\t// Also make a delay, otherwise the browser default behaviour would not kick in\n\t\t\t\tsetTimeout(() => history.pushState({}, '', url.href));\n\t\t\t\tconst info = this.parse(url);\n\t\t\t\tif (info) {\n\t\t\t\t\treturn this.renderer.update(info, [], false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\tkeepfocus: false,\n\t\t\t\tchain: [],\n\t\t\t\tdetails: {\n\t\t\t\t\tstate: {},\n\t\t\t\t\treplaceState: false\n\t\t\t\t},\n\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t});\n\t\t});\n\n\t\taddEventListener('popstate', (event) => {\n\t\t\tif (event.state && this.enabled) {\n\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\tif (event.state['sveltekit:index'] === this.current_history_index) return;\n\n\t\t\t\tthis._navigate({\n\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\tscroll: event.state['sveltekit:scroll'],\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tchain: [],\n\t\t\t\t\tdetails: null,\n\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\tthis.current_history_index = event.state['sveltekit:index'];\n\t\t\t\t\t},\n\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\tconst delta = this.current_history_index - event.state['sveltekit:index'];\n\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns true if `url` has the same origin and basepath as the app\n\t * @param {URL} url\n\t */\n\towns(url) {\n\t\treturn url.origin === location.origin && url.pathname.startsWith(this.base);\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {import('./types').NavigationInfo | undefined}\n\t */\n\tparse(url) {\n\t\tif (this.owns(url)) {\n\t\t\tconst path = decodeURI(url.pathname.slice(this.base.length) || '/');\n\n\t\t\treturn {\n\t\t\t\tid: url.pathname + url.search,\n\t\t\t\troutes: this.routes.filter(([pattern]) => pattern.test(path)),\n\t\t\t\turl,\n\t\t\t\tpath\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @typedef {Parameters<typeof import('$app/navigation').goto>} GotoParams\n\t *\n\t * @param {GotoParams[0]} href\n\t * @param {GotoParams[1]} opts\n\t * @param {string[]} chain\n\t */\n\tasync goto(\n\t\thref,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} } = {},\n\t\tchain\n\t) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (this.enabled) {\n\t\t\treturn this._navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tchain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {\n\t\t\t/* never resolves */\n\t\t});\n\t}\n\n\tenable() {\n\t\tthis.enabled = true;\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync prefetch(url) {\n\t\tconst info = this.parse(url);\n\n\t\tif (!info) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\treturn this.renderer.load(info);\n\t}\n\n\t/** @param {({ from, to }: { from: URL | null, to: URL }) => void} fn */\n\tafter_navigate(fn) {\n\t\tonMount(() => {\n\t\t\tthis.callbacks.after_navigate.push(fn);\n\n\t\t\treturn () => {\n\t\t\t\tconst i = this.callbacks.after_navigate.indexOf(fn);\n\t\t\t\tthis.callbacks.after_navigate.splice(i, 1);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @param {({ from, to, cancel }: { from: URL, to: URL | null, cancel: () => void }) => void} fn\n\t */\n\tbefore_navigate(fn) {\n\t\tonMount(() => {\n\t\t\tthis.callbacks.before_navigate.push(fn);\n\n\t\t\treturn () => {\n\t\t\t\tconst i = this.callbacks.before_navigate.indexOf(fn);\n\t\t\t\tthis.callbacks.before_navigate.splice(i, 1);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync _navigate({ url, scroll, keepfocus, chain, details, accepted, blocked }) {\n\t\tconst from = this.renderer.current.url;\n\t\tlet should_block = false;\n\n\t\tconst intent = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tthis.callbacks.before_navigate.forEach((fn) => fn(intent));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tconst info = this.parse(url);\n\t\tif (!info) {\n\t\t\tlocation.href = url.href;\n\t\t\treturn new Promise(() => {\n\t\t\t\t// never resolves\n\t\t\t});\n\t\t}\n\n\t\taccepted();\n\n\t\tif (!this.navigating) {\n\t\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-start'));\n\t\t}\n\t\tthis.navigating++;\n\n\t\tlet { pathname } = url;\n\n\t\tif (this.trailing_slash === 'never') {\n\t\t\tif (pathname !== '/' && pathname.endsWith('/')) pathname = pathname.slice(0, -1);\n\t\t} else if (this.trailing_slash === 'always') {\n\t\t\tconst is_file = /** @type {string} */ (url.pathname.split('/').pop()).includes('.');\n\t\t\tif (!is_file && !pathname.endsWith('/')) pathname += '/';\n\t\t}\n\n\t\tinfo.url = new URL(url.origin + pathname + url.search + url.hash);\n\n\t\tif (details) {\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state['sveltekit:index'] = this.current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', info.url);\n\t\t}\n\n\t\tawait this.renderer.handle_navigation(info, chain, false, {\n\t\t\tscroll,\n\t\t\tkeepfocus\n\t\t});\n\n\t\tthis.navigating--;\n\t\tif (!this.navigating) {\n\t\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-end'));\n\n\t\t\tconst navigation = { from, to: url };\n\t\t\tthis.callbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\t}\n}\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * Hash using djb2\n * @param {import('types/hooks').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\n/**\n * @param {import('types/page').LoadOutput} loaded\n * @returns {import('types/internal').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn {\n\t\t\t\tstatus: status || 500,\n\t\t\t\terror: new Error()\n\t\t\t};\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code â€” defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error('\"redirect\" property returned from load() must be a string')\n\t\t\t};\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types/internal').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @typedef {import('types/internal').CSRComponent} CSRComponent\n * @typedef {{ from: URL; to: URL }} Navigating\n */\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = typeof resource === 'string' ? resource : resource.url;\n\n\tlet selector = `script[data-type=\"svelte-data\"][data-url=${JSON.stringify(url)}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn fetch(resource, opts);\n}\n\nclass Renderer {\n\t/**\n\t * @param {{\n\t *   Root: CSRComponent;\n\t *   fallback: [CSRComponent, CSRComponent];\n\t *   target: Node;\n\t *   session: any;\n\t * }} opts\n\t */\n\tconstructor({ Root, fallback, target, session }) {\n\t\tthis.Root = Root;\n\t\tthis.fallback = fallback;\n\n\t\t/** @type {import('./router').Router | undefined} */\n\t\tthis.router;\n\n\t\tthis.target = target;\n\n\t\tthis.started = false;\n\n\t\tthis.session_id = 1;\n\t\tthis.invalid = new Set();\n\t\tthis.invalidating = null;\n\t\tthis.autoscroll = true;\n\t\tthis.updating = false;\n\n\t\t/** @type {import('./types').NavigationState} */\n\t\tthis.current = {\n\t\t\t// @ts-ignore - we need the initial value to be null\n\t\t\turl: null,\n\t\t\tsession_id: 0,\n\t\t\tbranch: []\n\t\t};\n\n\t\t/** @type {Map<string, import('./types').NavigationResult>} */\n\t\tthis.cache = new Map();\n\n\t\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult> | null}} */\n\t\tthis.loading = {\n\t\t\tid: null,\n\t\t\tpromise: null\n\t\t};\n\n\t\tthis.stores = {\n\t\t\turl: notifiable_store({}),\n\t\t\tpage: notifiable_store({}),\n\t\t\tnavigating: writable(/** @type {Navigating | null} */ (null)),\n\t\t\tsession: writable(session)\n\t\t};\n\n\t\tthis.$session = null;\n\n\t\tthis.root = null;\n\n\t\tlet ready = false;\n\t\tthis.stores.session.subscribe(async (value) => {\n\t\t\tthis.$session = value;\n\n\t\t\tif (!ready || !this.router) return;\n\t\t\tthis.session_id += 1;\n\n\t\t\tconst info = this.router.parse(new URL(location.href));\n\t\t\tif (info) this.update(info, [], true);\n\t\t});\n\t\tready = true;\n\t}\n\n\tdisable_scroll_handling() {\n\t\tif (import.meta.env.DEV && this.started && !this.updating) {\n\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t}\n\n\t\tif (this.updating || !this.started) {\n\t\t\tthis.autoscroll = false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   nodes: Array<Promise<CSRComponent>>;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t * }} selected\n\t */\n\tasync start({ status, error, nodes, url, params }) {\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tconst branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = {};\n\n\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\tlet result;\n\n\t\tlet error_args;\n\n\t\t// url.hash is empty when coming from the server\n\t\turl.hash = window.location.hash;\n\n\t\ttry {\n\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\tconst node = await this._load_node({\n\t\t\t\t\tmodule: await nodes[i],\n\t\t\t\t\turl,\n\t\t\t\t\tparams,\n\t\t\t\t\tstuff,\n\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\terror: is_leaf ? error : undefined\n\t\t\t\t});\n\n\t\t\t\tbranch.push(node);\n\n\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\tstatus: node.loaded.status,\n\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = error_args\n\t\t\t\t? await this._load_error(error_args)\n\t\t\t\t: await this._get_navigation_result_from_branch({\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tbranch,\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\terror\n\t\t\t\t  });\n\t\t} catch (e) {\n\t\t\tif (error) throw e;\n\n\t\t\tresult = await this._load_error({\n\t\t\t\tstatus: 500,\n\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\turl\n\t\t\t});\n\t\t}\n\n\t\tif (result.redirect) {\n\t\t\t// this is a real edge case â€” `load` would need to return\n\t\t\t// a redirect but only in the browser\n\t\t\tlocation.href = new URL(result.redirect, location.href).href;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._init(result);\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {string[]} chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean}} [opts]\n\t */\n\tasync handle_navigation(info, chain, no_cache, opts) {\n\t\tif (this.started) {\n\t\t\tthis.stores.navigating.set({\n\t\t\t\tfrom: this.current.url,\n\t\t\t\tto: info.url\n\t\t\t});\n\t\t}\n\n\t\tawait this.update(info, chain, no_cache, opts);\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {string[]} chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean}} [opts]\n\t */\n\tasync update(info, chain, no_cache, opts) {\n\t\tconst token = (this.token = {});\n\t\tlet navigation_result = await this._get_navigation_result(info, no_cache);\n\n\t\t// abort if user navigated during update\n\t\tif (token !== this.token) return;\n\n\t\tthis.invalid.clear();\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (chain.length > 10 || chain.includes(info.url.pathname)) {\n\t\t\t\tnavigation_result = await this._load_error({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl: info.url\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (this.router) {\n\t\t\t\t\tthis.router.goto(\n\t\t\t\t\t\tnew URL(navigation_result.redirect, info.url).href,\n\t\t\t\t\t\t{ replaceState: true },\n\t\t\t\t\t\t[...chain, info.url.pathname]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tlocation.href = new URL(navigation_result.redirect, location.href).href;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.updating = true;\n\n\t\tif (this.started) {\n\t\t\tthis.current = navigation_result.state;\n\n\t\t\tthis.root.$set(navigation_result.props);\n\t\t\tthis.stores.navigating.set(null);\n\t\t} else {\n\t\t\tthis._init(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\tdocument.body.focus();\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (this.autoscroll) {\n\t\t\t\tconst deep_linked = info.url.hash && document.getElementById(info.url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tthis.loading.promise = null;\n\t\tthis.loading.id = null;\n\t\tthis.autoscroll = true;\n\t\tthis.updating = false;\n\n\t\tif (!this.router) return;\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\tif (leaf_node && leaf_node.module.router === false) {\n\t\t\tthis.router.disable();\n\t\t} else {\n\t\t\tthis.router.enable();\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tload(info) {\n\t\tthis.loading.promise = this._get_navigation_result(info, false);\n\t\tthis.loading.id = info.id;\n\n\t\treturn this.loading.promise;\n\t}\n\n\t/** @param {string} href */\n\tinvalidate(href) {\n\t\tthis.invalid.add(href);\n\n\t\tif (!this.invalidating) {\n\t\t\tthis.invalidating = Promise.resolve().then(async () => {\n\t\t\t\tconst info = this.router && this.router.parse(new URL(location.href));\n\t\t\t\tif (info) await this.update(info, [], true);\n\n\t\t\t\tthis.invalidating = null;\n\t\t\t});\n\t\t}\n\n\t\treturn this.invalidating;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\t_init(result) {\n\t\tthis.current = result.state;\n\n\t\tconst style = document.querySelector('style[data-svelte]');\n\t\tif (style) style.remove();\n\n\t\tthis.root = new this.Root({\n\t\t\ttarget: this.target,\n\t\t\tprops: {\n\t\t\t\tstores: this.stores,\n\t\t\t\t...result.props\n\t\t\t},\n\t\t\thydrate: true\n\t\t});\n\n\t\tthis.started = true;\n\n\t\tif (this.router) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tthis.router.callbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync _get_navigation_result(info, no_cache) {\n\t\tif (this.loading.id === info.id && this.loading.promise) {\n\t\t\treturn this.loading.promise;\n\t\t}\n\n\t\tfor (let i = 0; i < info.routes.length; i += 1) {\n\t\t\tconst route = info.routes[i];\n\n\t\t\t// load code for subsequent routes immediately, if they are as\n\t\t\t// likely to match the current path/query as the current one\n\t\t\tlet j = i + 1;\n\t\t\twhile (j < info.routes.length) {\n\t\t\t\tconst next = info.routes[j];\n\t\t\t\tif (next[0].toString() === route[0].toString()) {\n\t\t\t\t\tnext[1].forEach((loader) => loader());\n\t\t\t\t\tj += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = await this._load(\n\t\t\t\t{\n\t\t\t\t\troute,\n\t\t\t\t\tinfo\n\t\t\t\t},\n\t\t\t\tno_cache\n\t\t\t);\n\t\t\tif (result) return result;\n\t\t}\n\n\t\treturn await this._load_error({\n\t\t\tstatus: 404,\n\t\t\terror: new Error(`Not found: ${info.url.pathname}`),\n\t\t\turl: info.url\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error?: Error;\n\t * }} opts\n\t */\n\tasync _get_navigation_result_from_branch({ url, params, stuff, branch, status, error }) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded && f.loaded.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect && redirect.loaded ? redirect.loaded.redirect : undefined,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\tsession_id: this.session_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst loaded = filtered[i].loaded;\n\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t}\n\n\t\tif (!this.current.url || url.href !== this.current.url.href) {\n\t\t\tresult.props.page = { url, params, status, error, stuff };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst maxage = leaf.loaded && leaf.loaded.maxage;\n\n\t\tif (maxage) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (this.cache.get(key) === result) {\n\t\t\t\t\tthis.cache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, maxage * 1000);\n\n\t\t\tconst unsubscribe = this.stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tthis.cache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t * }} options\n\t * @returns\n\t */\n\tasync _load_node({ status, error, module, url, params, stuff }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: []\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = this.$session;\n\n\t\tif (module.load) {\n\t\t\tconst { started } = this;\n\n\t\t\t/** @type {import('types/page').LoadInput | import('types/page').ErrorLoadInput} */\n\t\t\tconst load_input = {\n\t\t\t\tparams: uses_params,\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\treturn url;\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tfetch(resource, info) {\n\t\t\t\t\tconst requested = typeof resource === 'string' ? resource : resource.url;\n\t\t\t\t\tconst { href } = new URL(requested, url);\n\t\t\t\t\tnode.uses.dependencies.push(href);\n\n\t\t\t\t\treturn started ? fetch(resource, info) : initial_fetch(resource, info);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).status = status;\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).error = error;\n\t\t\t}\n\n\t\t\tconst loaded = await module.load.call(null, load_input);\n\n\t\t\tif (!loaded) {\n\t\t\t\tthrow new Error('load function must return a value');\n\t\t\t}\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationCandidate} selected\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult | undefined>} undefined if fallthrough\n\t */\n\tasync _load({ route, info: { url, path } }, no_cache) {\n\t\tconst key = url.pathname + url.search;\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = this.cache.get(key);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst [pattern, a, b, get_params] = route;\n\t\tconst params = get_params\n\t\t\t? // the pattern is for the route which we've already matched to this path\n\t\t\t  get_params(/** @type {RegExpExecArray}  */ (pattern.exec(path)))\n\t\t\t: {};\n\n\t\tconst changed = this.current.url && {\n\t\t\turl: key !== this.current.url.pathname + this.current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => this.current.params[key] !== params[key]),\n\t\t\tsession: this.session_id !== this.current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = {};\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number | undefined} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | undefined} */\n\t\tlet error;\n\n\t\t// preload modules\n\t\ta.forEach((loader) => loader());\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = this.current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tprevious.uses.dependencies.some((dep) => this.invalid.has(dep)) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\tnode = await this._load_node({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff\n\t\t\t\t\t});\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.fallthrough) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\tstate: this.current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await this._load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded && error_loaded.loaded && error_loaded.loaded.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded && error_loaded.loaded && error_loaded.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await this._load_error({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node && node.loaded && node.loaded.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await this._get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t * }} opts\n\t */\n\tasync _load_error({ status, error, url }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst node = await this._load_node({\n\t\t\tmodule: await this.fallback[0],\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {}\n\t\t});\n\t\tconst error_node = await this._load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await this.fallback[1],\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (node && node.loaded && node.loaded.stuff) || {}\n\t\t});\n\n\t\tconst branch = [node, error_node];\n\t\tconst stuff = { ...node?.loaded?.stuff, ...error_node?.loaded?.stuff };\n\n\t\treturn await this._get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror\n\t\t});\n\t}\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Node;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types/internal').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: Array<Promise<import('types/internal').CSRComponent>>;\n *     url: URL;\n *     params: Record<string, string>;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tif (import.meta.env.DEV && !target) {\n\t\tthrow new Error('Missing target element. See https://kit.svelte.dev/docs#configuration-target');\n\t}\n\n\tconst renderer = new Renderer({\n\t\tRoot,\n\t\tfallback,\n\t\ttarget,\n\t\tsession\n\t});\n\n\tconst router = route\n\t\t? new Router({\n\t\t\t\tbase: paths.base,\n\t\t\t\troutes,\n\t\t\t\ttrailing_slash,\n\t\t\t\trenderer\n\t\t  })\n\t\t: null;\n\n\tinit({ router, renderer });\n\tset_paths(paths);\n\n\tif (hydrate) await renderer.start(hydrate);\n\tif (router) {\n\t\tif (spa) router.goto(location.href, { replaceState: true }, []);\n\t\trouter.init_listeners();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"names":["base"],"mappings":"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"}